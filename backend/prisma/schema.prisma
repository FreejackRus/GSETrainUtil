// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model requests {
  id                Int      @id @default(autoincrement())
  applicationNumber Int      @unique
  applicationDate   DateTime @default(now())
  typeWork          String
  trainNumber       String
  carriageType      String
  carriageNumber    String
  completedJob      String
  currentLocation   String
  
  // Пути к фотографиям
  carriagePhoto     String?
  generalPhoto      String?
  finalPhoto        String?
  
  // Информация о пользователе
  userId            Int
  userName          String
  userRole          String
  
  // Массив ID установленного оборудования
  equipment         Int[]    @default([])
  
  // Связь с оборудованием (оставляем для совместимости)
  requestEquipment  requestEquipment[]
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model requestEquipment {
  id               Int      @id @default(autoincrement())
  requestId        Int
  equipmentType    String
  serialNumber     String?
  macAddress       String?
  countEquipment   Int      @default(1)
  
  // Пути к фотографиям оборудования
  equipmentPhoto   String?
  serialPhoto      String?
  macPhoto         String?
  
  // Связи
  request          requests @relation(fields: [requestId], references: [id], onDelete: Cascade)
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model typeWagons {
  id                   Int         @id @default(autoincrement())
  typeWagon            String      @unique
  connectionTypeWagons equipment[]
}

model numberWagons {
  id                    Int         @id @default(autoincrement())
  numberWagon           String      @unique
  connectionNumberWagon equipment[]
}

model equipment {
  id          Int      @id @default(autoincrement())
  type        String
  snNumber    String?
  mac         String?
  status      String
  lastService DateTime

  connectionTypeWagons typeWagons @relation(fields: [typeWagonsId], references: [id])
  typeWagonsId         Int

  connectionNumberWagon numberWagons @relation(fields: [numberWagonId], references: [id])
  numberWagonId         Int

  photo               String
}

model typeWork {
  id                 Int                        @id @default(autoincrement())
  typeWork           String                     @unique
}

model trainNumber {
  id                    Int                        @id @default(autoincrement())
  trainNumber           String                     @unique
}

model completedJob {
  id                     Int                        @id @default(autoincrement())
  completedJob           String                     @unique
}

model currentLocation {
  id                        Int                        @id @default(autoincrement())
  currentLocation           String                     @unique
}

model User {
  id             Int                        @id @default(autoincrement())
  login          String   @unique
  password       String
  role           String
}
