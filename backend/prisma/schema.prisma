// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model requestsTechnicalWorkLog {
  id Int @id @default(autoincrement())

  applicationNumber Int

  connectionTypeWork typeWork @relation(fields: [typeWorkId], references: [id])
  typeWorkId         Int

  connectionTrainNumber trainNumber @relation(fields: [trainNumberId], references: [id])
  trainNumberId         Int

  connectionEquipment equipment @relation(fields: [equipmentId], references: [id])
  equipmentId         Int

  countEquipment         Int
  connectionCompletedJob completedJob @relation(fields: [completedJobId], references: [id])
  completedJobId         Int

  connectionCurrentLocation currentLocation @relation(fields: [currentLocationId], references: [id])
  currentLocationId         Int

  stepPhotos String[]
  finalPhoto String

  connectionUser User @relation(fields: [userId], references: [id])
  userId         Int
}

model typeWagons {
  id                   Int         @id @default(autoincrement())
  typeWagon            String
  connectionTypeWagons equipment[]
}

model numberWagons {
  id                    Int         @id @default(autoincrement())
  numberWagon           String
  connectionNumberWagon equipment[]
}

model equipment {
  id          Int      @id @default(autoincrement())
  type        String
  snNumber    String?
  mac         String?
  status      String
  lastService DateTime

  connectionTypeWagons typeWagons @relation(fields: [typeWagonsId], references: [id])
  typeWagonsId         Int

  connectionNumberWagon numberWagons @relation(fields: [numberWagonId], references: [id])
  numberWagonId         Int

  connectionEquipment requestsTechnicalWorkLog[]
  photo               String
}

model typeWork {
  id                 Int                        @id @default(autoincrement())
  typeWork           String                     @unique
  connectionTypeWork requestsTechnicalWorkLog[]
}

model trainNumber {
  id                    Int                        @id @default(autoincrement())
  trainNumber           String                     @unique
  connectionTrainNumber requestsTechnicalWorkLog[]
}

model completedJob {
  id                     Int                        @id @default(autoincrement())
  completedJob           String                     @unique
  connectionCompletedJob requestsTechnicalWorkLog[]
}

model currentLocation {
  id                        Int                        @id @default(autoincrement())
  currentLocation           String                     @unique
  connectionCurrentLocation requestsTechnicalWorkLog[]
}

model User {
  id             Int                        @id @default(autoincrement())
  login          String   @unique
  password       String
  role           String
  connectionUser requestsTechnicalWorkLog[]
}

model Device {
  id     Int    @id @default(autoincrement())
  status String
  name   String
  count  Int
}
