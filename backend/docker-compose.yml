services:
  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data

  # одноразовый контейнер ДЛЯ МИГРАЦИЙ (запускается вручную)
  migrator:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      - db
    command: ["npx","prisma","migrate","deploy"]
    restart: "no"         # ВАЖНО: не перезапускать
    profiles: ["setup"]   # запускаем только когда явно попросим

  # одноразовый контейнер ИМПОРТА EXCEL (запускается вручную)
  import_excel:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      EXCEL_FILE_PATH: /app/perechen.xlsx
    depends_on:
      - db
    command: ["node","dist/prisma/import-excel.js"]
    restart: "no"
    profiles: ["setup"]

  # одноразовый контейнер ИМПОРТА ФОТО (запускается вручную)
  import_photos:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      UPLOADS_DIR: /app/var/uploads
      PHOTOS_XLSX: /import/photos.xlsx
      PHOTOS_SHEET: "Лист1"
    depends_on:
      - db
    # Папка с photos.xlsx и GSE/ монтируется read-only
    volumes:
      - uploads_data:/app/var/uploads
      - ./photos.xlsx:/import/photos.xlsx:ro
      - ./GSE:/import/GSE:ro
    command: ["node","dist/prisma/import-photo.js","--xlsx","/import/photos.xlsx","--src","/import/GSE","--sheet","Лист1"]
    restart: "no"
    profiles: ["setup"]

  # основной API без миграций
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      PDF_DIR: /app/var/pdf
      UPLOADS_DIR: /app/var/uploads
    depends_on:
      - db
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - pdf_data:/app/var/pdf
      - uploads_data:/app/var/uploads
    restart: unless-stopped

volumes:
  db_data:
  pdf_data:
  uploads_data:
